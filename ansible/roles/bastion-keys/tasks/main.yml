---
- name: 'fail if aws access key id is not set'
  fail:
    msg: "The AWS access key ID must be provided"
  when: aws_access_key_id is not defined or aws_access_key_id == ""

- name: 'fail if aws secret access key is not set'
  fail:
    msg: "The AWS secret access key must be provided"
  when: aws_secret_access_key is not defined or aws_secret_access_key == ""

- name: 'fail if ansible password is not set'
  fail:
    msg: "The Ansible vault password must be provided"
  when: ansible_vault_password is not defined or ansible_vault_password == ""

- name: 'set the aws access key id in ansible user ~/.bashrc'
  lineinfile:
    path: "/home/ansible/.bashrc"
    state: present
    line: "export AWS_ACCESS_KEY_ID={{ aws_access_key_id }}"

- name: 'set the aws secret access key in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: "export AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}"

- name: 'activate the virtualenv for the ansible user'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: "source ~/.venv/provisioning/bin/activate"

- name: 'set the ansible windows user password in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: "export {{ windows_ansible_user_password_variable }}={{ secret_ansible_account_password }}"

- name: 'set the aws default region in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: export AWS_DEFAULT_REGION=eu-west-2

- name: 'set the aws default region in ansible user ~/.bashrc'
  lineinfile:
    path: /home/ansible/.bashrc
    state: present
    line: export AWS_DEFAULT_REGION=eu-west-2

- name: 'clone safe-build-infrastructure repo'
  git:
    repo: "{{ safe_build_infrastructure_repo_url }}"
    dest: "{{ safe_build_infrastructure_repo_path }}"
    version: "{{ safe_build_infrastructure_repo_branch }}"
  become: yes
  become_user: "{{ provisioning_user }}"
