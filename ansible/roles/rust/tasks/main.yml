---
- name: 'load os specific variables'
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- stat: path="{{ rustc_path }}"
  register: rust_path_result

- name: 'install dependencies for crust (CentOS)'
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - openssl-devel
  when: ansible_distribution == 'CentOS'

- name: 'install dependencies for crust (Ubuntu)'
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - libssl-dev
    - pkg-config
  when: ansible_distribution == 'Ubuntu'

- name: 'get the rustup installer'
  get_url:
    url: "{{ rustup_installer_url }}"
    dest: "{{ rustup_installer_path }}"
    mode: 0775
  when:
    - rust_path_result.stat.exists == False
    - ansible_distribution == 'CentOS'

  # There is some problem with the get_url module and SSL on Ubuntu 14.04 and OSX.
  # If you run curl manually it works just fine.
- name: 'get the rustup installer (Ubuntu)'
  shell: "curl {{ rustup_installer_url }} >> {{ rustup_installer_path }}"
  when:
    - rust_path_result.stat.exists == False
    - ansible_distribution == 'Ubuntu' or ansible_distribution == 'MacOSX'

- name: 'set rustup script executable (Ubuntu)'
  file:
    path: "{{ rustup_installer_path }}"
    mode: 0775
  when:
    - rust_path_result.stat.exists == False
    - ansible_distribution == 'Ubuntu' or ansible_distribution == 'MacOSX'

- name: 'run the rustup installer'
  command: "{{ rustup_installer_path }} --default-toolchain {{ rust_version }} --no-modify-path -y"
  become: yes
  become_user: "{{ build_user }}"
  when: rust_path_result.stat.exists == False

- name: 'update to the latest stable version'
  command: "{{ rustup_path }} update {{ rust_version }}"
  become: yes
  become_user: "{{ build_user }}"

- name: 'add musl target'
  command: "{{ rustup_path }} target add x86_64-unknown-linux-musl"
  become: yes
  become_user: "{{ build_user }}"
  when: ansible_distribution != 'MacOSX'

- name: 'add iOS targets'
  command: "{{ rustup_path }} target add {{ item }}"
  become: yes
  become_user: "{{ build_user }}"
  with_items:
    - aarch64-apple-ios
    - x86_64-apple-ios
  when: ansible_distribution == 'MacOSX'

- name: 'install rustfmt'
  command: "{{ rustup_path }} component add rustfmt"
  become: yes
  become_user: "{{ build_user }}"

- name: 'install clippy'
  command: "{{ rustup_path }} component add clippy"
  become: yes
  become_user: "{{ build_user }}"

- stat: path="{{ cargo_script_path }}"
  register: cargo_script_result

- name: 'install cargo script'
  command: "{{ cargo_path }} install cargo-script"
  become: yes
  become_user: "{{ build_user }}"
  when: cargo_script_result.stat.exists == False
